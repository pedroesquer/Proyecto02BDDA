package itson.sistemarestaurantepresentacion.comandas;

import itson.sistemarestaurantepresentacion.ingredientes.*;
import itson.sistemarestaurantedominio.Producto;
import itson.sistemarestaurantedominio.ProductoComanda;
import itson.sistemarestaurantedominio.dtos.AgregarProductoComandaDTO;
import itson.sistemarestaurantedominio.dtos.NuevoProductoDTO;
import itson.sistemarestaurantenegocio.IComandasBO;
import itson.sistemarestaurantenegocio.IProductosBO;
import itson.sistemarestaurantenegocio.IProductosComandaBO;
import itson.sistemarestaurantenegocio.excepciones.NegocioException;
import itson.sistemarestaurantenegocio.fabrica.FabricaObjetosNegocio;
import itson.sistemarestaurantepersistencia.excepciones.CantidadInexistenteException;
import itson.sistemarestaurantepersistencia.excepciones.PersistenciaException;
import itson.sistemarestaurantepresentacion.control.Control;
import itson.sistemarestaurantepresentacion.observers.AgregarDetallesComandaObserver;
import itson.sistemarestaurantepresentacion.observers.ProductoSeleccionadoObserver;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Pedro Morales Esquer, Juan Pablo Heras Carrazco, Victoria Valenzuela
 * Sooto
 */
public class DetallesComanda extends javax.swing.JFrame implements ProductoSeleccionadoObserver, AgregarDetallesComandaObserver {

    /**
     * Creates new form Productos
     */
    private Long idComanda;
    private IComandasBO comandasBO;
    private IProductosComandaBO productosComandaBO;
    private IProductosBO productosBO;
    DefaultTableModel modeloTabla;

    private static final Logger LOG = Logger.getLogger(BuscadorIngredientes.class.getName());

    public DetallesComanda(Long idComanda, IComandasBO comandasBO, IProductosComandaBO productosComandaBO) {
        initComponents();
        this.setTitle("Detalles comanda");
        this.setResizable(false);
        this.setSize(760, 500);
        this.setLocationRelativeTo(null);
        this.comandasBO = comandasBO;
        this.idComanda = idComanda;
        this.productosComandaBO = productosComandaBO;
        this.llenarTablaComanda();
        this.ocultarColumnaID();
        this.productosBO = FabricaObjetosNegocio.crearProductosBO();
        modeloTabla = (DefaultTableModel) this.tablaProductosComanda.getModel();
        modeloTabla.setRowCount(0);
        this.llenarTablaComanda();
    }

    /**
     * Llena la tabla con todos los ingredientes disponibles. Consulta los
     * ingredientes y los agrega a la tabla.
     */
    private void llenarTablaComanda() {
        try {
            List<ProductoComanda> productos = this.productosComandaBO.consultar(idComanda);
            DefaultTableModel modeloTabla = (DefaultTableModel) this.tablaProductosComanda.getModel();
            modeloTabla.setRowCount(0);
            for (ProductoComanda productosComanda : productos) {
                Object[] fila = {
                    productosComanda.getId(),
                    productosComanda.getProducto().getNombre(),
                    productosComanda.getComentarios(),
                    productosComanda.getPrecioUnitario()
                };
                modeloTabla.addRow(fila);
            }
        } catch (NegocioException ex) {
            LOG.severe("No se pudo llenar la tabla");
            JOptionPane.showInputDialog(this, ex.getMessage());
        }
    }

    private void ocultarColumnaID() {
        TableColumnModel columnModel = tablaProductosComanda.getColumnModel();
        TableColumn columnaID = columnModel.getColumn(0);
        columnModel.removeColumn(columnaID);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelGeneral = new javax.swing.JPanel();
        panelSuperior = new javax.swing.JPanel();
        iconChefSoft = new javax.swing.JLabel();
        iconComanda = new javax.swing.JLabel();
        lblTituloComanda = new javax.swing.JLabel();
        pnlTablaProductosComanda = new javax.swing.JScrollPane();
        tablaProductosComanda = new javax.swing.JTable();
        btnVolver = new javax.swing.JButton();
        lblCancelarComanda = new javax.swing.JLabel();
        lblAgregarProductos = new javax.swing.JLabel();
        lblAgregarFondo = new javax.swing.JLabel();
        lblEntregar = new javax.swing.JLabel();
        lblEntregarComanda = new javax.swing.JLabel();
        lblAgregarIcon = new javax.swing.JLabel();
        lblAgregar = new javax.swing.JLabel();
        lblCancelarFondo1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelGeneral.setBackground(new java.awt.Color(255, 253, 211));
        panelGeneral.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelSuperior.setBackground(new java.awt.Color(235, 230, 208));

        iconChefSoft.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/logoPequenioStroke.png"))); // NOI18N

        iconComanda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/comandasIcon.png"))); // NOI18N

        lblTituloComanda.setFont(new java.awt.Font("Helvetica Neue", 0, 64)); // NOI18N
        lblTituloComanda.setText("Comandas");

        javax.swing.GroupLayout panelSuperiorLayout = new javax.swing.GroupLayout(panelSuperior);
        panelSuperior.setLayout(panelSuperiorLayout);
        panelSuperiorLayout.setHorizontalGroup(
            panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(iconChefSoft)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                .addComponent(lblTituloComanda)
                .addGap(103, 103, 103)
                .addComponent(iconComanda)
                .addGap(49, 49, 49))
        );
        panelSuperiorLayout.setVerticalGroup(
            panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSuperiorLayout.createSequentialGroup()
                .addGroup(panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelSuperiorLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblTituloComanda))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelSuperiorLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(iconChefSoft, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelSuperiorLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(iconComanda, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)))
                .addContainerGap())
        );

        panelGeneral.add(panelSuperior, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        tablaProductosComanda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Producto", "Comentario", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaProductosComanda.setColumnSelectionAllowed(true);
        pnlTablaProductosComanda.setViewportView(tablaProductosComanda);
        tablaProductosComanda.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        panelGeneral.add(pnlTablaProductosComanda, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 180, 380, 154));

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });
        panelGeneral.add(btnVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 93, -1));

        lblCancelarComanda.setBackground(new java.awt.Color(0, 0, 0));
        lblCancelarComanda.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblCancelarComanda.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCancelarComanda.setText("Cancelar comanda");
        lblCancelarComanda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCancelarComandaMouseClicked(evt);
            }
        });
        panelGeneral.add(lblCancelarComanda, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 360, 170, 60));

        lblAgregarProductos.setBackground(new java.awt.Color(0, 0, 0));
        lblAgregarProductos.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblAgregarProductos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAgregarProductos.setText("Agregar a comanda");
        lblAgregarProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAgregarProductosMouseClicked(evt);
            }
        });
        panelGeneral.add(lblAgregarProductos, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 360, 170, 60));

        lblAgregarFondo.setBackground(new java.awt.Color(0, 0, 0));
        lblAgregarFondo.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblAgregarFondo.setForeground(new java.awt.Color(0, 0, 0));
        lblAgregarFondo.setText("Cancelar");
        lblAgregarFondo.setOpaque(true);
        lblAgregarFondo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAgregarFondoMouseClicked(evt);
            }
        });
        panelGeneral.add(lblAgregarFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 360, 170, 60));

        lblEntregar.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblEntregar.setText("Entregar Comanda");
        panelGeneral.add(lblEntregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 310, -1, -1));

        lblEntregarComanda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/entregarComanda.png"))); // NOI18N
        lblEntregarComanda.setText("s");
        lblEntregarComanda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblEntregarComandaMouseClicked(evt);
            }
        });
        panelGeneral.add(lblEntregarComanda, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 170, -1, -1));

        lblAgregarIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/aniadirProducto.png"))); // NOI18N
        lblAgregarIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAgregarIconMouseClicked(evt);
            }
        });
        panelGeneral.add(lblAgregarIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, 110, 110));

        lblAgregar.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblAgregar.setText("Buscar producto");
        panelGeneral.add(lblAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        lblCancelarFondo1.setBackground(new java.awt.Color(0, 0, 0));
        lblCancelarFondo1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblCancelarFondo1.setForeground(new java.awt.Color(0, 0, 0));
        lblCancelarFondo1.setText("Cancelar");
        lblCancelarFondo1.setOpaque(true);
        lblCancelarFondo1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCancelarFondo1MouseClicked(evt);
            }
        });
        panelGeneral.add(lblCancelarFondo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 360, 170, 60));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        Control.getInstancia().abrirComandas();
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void lblEntregarComandaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblEntregarComandaMouseClicked
        try {
            comandasBO.cerrarComanda(idComanda);
            JOptionPane.showMessageDialog(this, "La comanda fue cerrada exitosamente.",
                    "Comanda cerrada", JOptionPane.INFORMATION_MESSAGE);
        } catch (CantidadInexistenteException ex) {
            JOptionPane.showMessageDialog(this, "No hay suficiente stock para completar la comanda:\n" + ex.getMessage(),
                    "Stock insuficiente", JOptionPane.WARNING_MESSAGE);
            Logger.getLogger(DetallesComanda.class.getName()).log(Level.WARNING, "Stock insuficiente al cerrar comanda", ex);
        } catch (NegocioException ex) {
            JOptionPane.showMessageDialog(this, "Ocurrió un error de negocio:\n" + ex.getMessage(),
                    "Error de negocio", JOptionPane.WARNING_MESSAGE);
            Logger.getLogger(DetallesComanda.class.getName()).log(Level.WARNING, "Error de negocio al cerrar comanda", ex);
        } catch (PersistenciaException ex) {
            JOptionPane.showMessageDialog(this, "Ocurrió un error al acceder a la base de datos:\n" + ex.getMessage(),
                    "Error de persistencia", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(DetallesComanda.class.getName()).log(Level.SEVERE, "Error de persistencia al cerrar comanda", ex);
        }

    }//GEN-LAST:event_lblEntregarComandaMouseClicked

    private void lblAgregarIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAgregarIconMouseClicked
        Control.getInstancia().abrirBuscadorProductos(this);
    }//GEN-LAST:event_lblAgregarIconMouseClicked

    private void lblCancelarComandaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCancelarComandaMouseClicked
        try {
            comandasBO.cancelarComanda(idComanda);
            JOptionPane.showMessageDialog(this, "La comanda fue cancelada exitosamente.",
                    "Comanda cerrada", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        } catch (CantidadInexistenteException ex) {
            JOptionPane.showMessageDialog(this, "No hay suficiente stock para completar la comanda:\n" + ex.getMessage(),
                    "Stock insuficiente", JOptionPane.WARNING_MESSAGE);
            Logger.getLogger(DetallesComanda.class.getName()).log(Level.WARNING, "Stock insuficiente al cerrar comanda", ex);
        } catch (NegocioException ex) {
            JOptionPane.showMessageDialog(this, "Ocurrió un error de negocio:\n" + ex.getMessage(),
                    "Error de negocio", JOptionPane.WARNING_MESSAGE);
            Logger.getLogger(DetallesComanda.class.getName()).log(Level.WARNING, "Error de negocio al cerrar comanda", ex);
        } catch (PersistenciaException ex) {
            JOptionPane.showMessageDialog(this, "Ocurrió un error al acceder a la base de datos:\n" + ex.getMessage(),
                    "Error de persistencia", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(DetallesComanda.class.getName()).log(Level.SEVERE, "Error de persistencia al cerrar comanda", ex);
        }


    }//GEN-LAST:event_lblCancelarComandaMouseClicked

    private void lblAgregarFondoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAgregarFondoMouseClicked
    }//GEN-LAST:event_lblAgregarFondoMouseClicked

    private void lblAgregarProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAgregarProductosMouseClicked
        //aqui

    }//GEN-LAST:event_lblAgregarProductosMouseClicked

    private void lblCancelarFondo1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCancelarFondo1MouseClicked

    }//GEN-LAST:event_lblCancelarFondo1MouseClicked

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel iconChefSoft;
    private javax.swing.JLabel iconComanda;
    private javax.swing.JLabel lblAgregar;
    private javax.swing.JLabel lblAgregarFondo;
    private javax.swing.JLabel lblAgregarIcon;
    private javax.swing.JLabel lblAgregarProductos;
    private javax.swing.JLabel lblCancelarComanda;
    private javax.swing.JLabel lblCancelarFondo1;
    private javax.swing.JLabel lblEntregar;
    private javax.swing.JLabel lblEntregarComanda;
    private javax.swing.JLabel lblTituloComanda;
    private javax.swing.JPanel panelGeneral;
    private javax.swing.JPanel panelSuperior;
    private javax.swing.JScrollPane pnlTablaProductosComanda;
    private javax.swing.JTable tablaProductosComanda;
    // End of variables declaration//GEN-END:variables

    private void agregarProductosComanda(AgregarProductoComandaDTO productoComandaDTO) throws NegocioException {
        productosComandaBO.registrar(productoComandaDTO);
    }

    private void actualizarTablaConProducto(AgregarProductoComandaDTO productoComandaDTO) {

        Object[] fila = {
            productoComandaDTO.getIdProducto(),
            productosBO.consultarProductoIndividual(productoComandaDTO.getIdProducto()).getNombre(),
            productoComandaDTO.getComentario(),
            productoComandaDTO.getPrecioUnitario()
        };
        modeloTabla.addRow(fila);
    }

    @Override
    public void productoSeleccionado(NuevoProductoDTO productoDTO) {
        Producto producto = productosBO.consultarProductoIndividual(productoDTO.getId());
        Control.getInstancia().abrirAgregarDetalleComanda(producto, this);

    }

    @Override
    public void detallesProductoComandaAceptado(AgregarProductoComandaDTO productoComandaDTO) {
        actualizarTablaConProducto(productoComandaDTO);
        try {
            agregarProductosComanda(productoComandaDTO);
        } catch (NegocioException ex) {
            Logger.getLogger(DetallesComanda.class.getName()).log(Level.SEVERE, "Error al procesar la comanda", ex);
        }
    }
}
