package itson.sistemarestaurantepresentacion.comandas;

import itson.sistemarestaurantedominio.EstadoComanda;
import itson.sistemarestaurantedominio.Mesa;
import itson.sistemarestaurantedominio.Producto;
import itson.sistemarestaurantedominio.ProductoComanda;
import itson.sistemarestaurantedominio.dtos.AgregarProductoComandaDTO;
import itson.sistemarestaurantedominio.dtos.NuevaComandaDTO;
import itson.sistemarestaurantedominio.dtos.NuevoIngredienteDTO;
import itson.sistemarestaurantedominio.dtos.NuevoProductoDTO;
import itson.sistemarestaurantenegocio.IComandasBO;
import itson.sistemarestaurantenegocio.IIngredientesBO;
import itson.sistemarestaurantenegocio.IMesasBO;
import itson.sistemarestaurantenegocio.IProductosBO;
import itson.sistemarestaurantenegocio.excepciones.NegocioException;
import itson.sistemarestaurantenegocio.fabrica.FabricaObjetosNegocio;
import itson.sistemarestaurantepersistencia.excepciones.PersistenciaException;
import itson.sistemarestaurantepresentacion.control.Control;
import itson.sistemarestaurantepresentacion.observers.AgregarDetallesComandaObserver;
import itson.sistemarestaurantepresentacion.observers.ProductoSeleccionadoObserver;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * ntenegocio.IMesasBO; import
 * itson.sistemarestaurantenegocio.excepciones.NegocioException; import
 * itson.sistemarestaurantenegocio.fabrica.FabricaObjetosNegocio; import
 * itson.sistemarestaurantepresentacion.control.Control; import
 * itson.sistemarestaurantepresentacion.observers.AgregarDetallesComandaObserver;
 * import
 * itson.sistemarestaurantepresentacion.observers.ProductoSeleccionadoObserver;
 * import java.util.List; import java.util.logging.Level; import
 * java.util.logging.Logger; import javax.swing.DefaultComboBoxModel;
 *
 *
 * @author Pedro Morales Esquer, Juan Pablo Heras Carrazco, Victoria Valenzuela
 * Soto
 */
public class AgregarComanda extends javax.swing.JFrame implements ProductoSeleccionadoObserver, AgregarDetallesComandaObserver {

    private IMesasBO mesasBO;
    private IProductosBO productosBO;
    private IComandasBO comandaBO;

    DefaultTableModel modeloTabla;

    /**
     * Creates new form Productos
     */
    public AgregarComanda(IComandasBO comandasBO, IMesasBO mesasBO, IProductosBO productosBO) {
        this.comandaBO = FabricaObjetosNegocio.crearComandasBO();
        initComponents();
        this.setTitle("Comandas");
        this.setResizable(false);
        this.setSize(760, 500);
        this.setLocationRelativeTo(null);
        this.mesasBO = mesasBO;
        this.productosBO = productosBO;
        DefaultComboBoxModel<Mesa> modeloMesas = new DefaultComboBoxModel<>();
        comboBoxMesa.setModel(modeloMesas);
        tablaComandas.removeColumn(tablaComandas.getColumnModel().getColumn(0));
        modeloTabla = (DefaultTableModel) this.tablaComandas.getModel();
        modeloTabla.setRowCount(0);
        try {
            obtenerNombresMesa();
        } catch (NegocioException ex) {
            Logger.getLogger(AgregarComanda.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelGeneral = new javax.swing.JPanel();
        panelSuperior = new javax.swing.JPanel();
        lblTituloComanda = new javax.swing.JLabel();
        iconChefSoft = new javax.swing.JLabel();
        iconComanda = new javax.swing.JLabel();
        btnBuscarCliente = new javax.swing.JButton();
        pnlTablaComandas = new javax.swing.JScrollPane();
        tablaComandas = new javax.swing.JTable();
        btnVolver = new javax.swing.JButton();
        btnAceptar = new javax.swing.JButton();
        comboBoxMesa = new javax.swing.JComboBox<>();
        btnBuscarProducto1 = new javax.swing.JButton();
        lblNombreCliente = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelGeneral.setBackground(new java.awt.Color(255, 253, 211));
        panelGeneral.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelSuperior.setBackground(new java.awt.Color(235, 230, 208));

        lblTituloComanda.setFont(new java.awt.Font("Helvetica Neue", 0, 64)); // NOI18N
        lblTituloComanda.setText("Comandas");

        iconChefSoft.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/logoPequenioStroke.png"))); // NOI18N

        iconComanda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/comandasIcon.png"))); // NOI18N

        javax.swing.GroupLayout panelSuperiorLayout = new javax.swing.GroupLayout(panelSuperior);
        panelSuperior.setLayout(panelSuperiorLayout);
        panelSuperiorLayout.setHorizontalGroup(
            panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(iconChefSoft)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTituloComanda)
                .addGap(98, 98, 98)
                .addComponent(iconComanda)
                .addGap(52, 52, 52))
        );
        panelSuperiorLayout.setVerticalGroup(
            panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSuperiorLayout.createSequentialGroup()
                .addGroup(panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelSuperiorLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblTituloComanda))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelSuperiorLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(iconChefSoft, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelSuperiorLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(iconComanda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        panelGeneral.add(panelSuperior, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 774, -1));

        btnBuscarCliente.setText("Buscar Cliente");
        btnBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClienteActionPerformed(evt);
            }
        });
        panelGeneral.add(btnBuscarCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(472, 129, 116, -1));

        tablaComandas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idProducto", "Cantidad", "Producto", "Comentarios", "Precio", "Importe"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaComandas.setColumnSelectionAllowed(true);
        pnlTablaComandas.setViewportView(tablaComandas);
        tablaComandas.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        panelGeneral.add(pnlTablaComandas, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 190, 470, 154));

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });
        panelGeneral.add(btnVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 400, 93, -1));

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        panelGeneral.add(btnAceptar, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 400, 93, -1));

        comboBoxMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxMesaActionPerformed(evt);
            }
        });
        panelGeneral.add(comboBoxMesa, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 127, -1, -1));

        btnBuscarProducto1.setText("Buscar Producto");
        btnBuscarProducto1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProducto1ActionPerformed(evt);
            }
        });
        panelGeneral.add(btnBuscarProducto1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 350, 116, -1));

        lblNombreCliente.setText("-");
        panelGeneral.add(lblNombreCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 133, 97, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void obtenerNombresMesa() throws NegocioException {
        DefaultComboBoxModel<Mesa> modeloMesas = (DefaultComboBoxModel<Mesa>) comboBoxMesa.getModel();
        modeloMesas.removeAllElements(); // limpia el modelo antes de llenarlo

        List<Mesa> listaMesas = mesasBO.consultarMesas();
        for (Mesa m : listaMesas) {
            modeloMesas.addElement(m);
        }
    }
    private void btnBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClienteActionPerformed

    }//GEN-LAST:event_btnBuscarClienteActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        Control.getInstancia().abrirComandas();
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private Mesa obtenerMesa() throws NegocioException {
        return (Mesa) comboBoxMesa.getSelectedItem();
    }
    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        try {
            NuevaComandaDTO comandaDTO = new NuevaComandaDTO();
            //TIENES QUE SETEAR MONTO TOTAL EN 0, ESTADO EN ABIERTA Y VERIFICAR SI TIENE O NO CLIENTE Y ASIGNARLO DEPENDIENDO
            comandaDTO.setFechaHora(LocalDateTime.now());
            comandaDTO.setMontoTotal(0.0);
            comandaDTO.setMesa(obtenerMesa());
            comandaDTO.setEstadoComanda(EstadoComanda.ABIERTA);
            comandaDTO.setProductoComanda(generarListaProductosComanda());
            try {
                comandaBO.crearComanda(comandaDTO);
                JOptionPane.showMessageDialog(this, "La comanda fue agregada correctamente.",
                        "Comanda registrada", JOptionPane.INFORMATION_MESSAGE);
                Logger.getLogger(AgregarComanda.class.getName()).log(Level.INFO, "Nueva comanda creada exitosamente.");
            } catch (NegocioException ex) {
                Logger.getLogger(AgregarComanda.class.getName()).log(Level.SEVERE, null, ex);
            } catch (PersistenciaException ex) {
                Logger.getLogger(AgregarComanda.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (NegocioException ex) {
            Logger.getLogger(AgregarComanda.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnBuscarProducto1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProducto1ActionPerformed
        Control.getInstancia().abrirBuscadorProductos(this);
    }//GEN-LAST:event_btnBuscarProducto1ActionPerformed

    private void comboBoxMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxMesaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxMesaActionPerformed

    private List<ProductoComanda> generarListaProductosComanda() {
        DefaultTableModel modelo = (DefaultTableModel) tablaComandas.getModel();

        List<ProductoComanda> lista = new ArrayList<>();

        for (int i = 0; i < modelo.getRowCount(); i++) {
            ProductoComanda producto = new ProductoComanda();

            // Se obtiene la cantidad (columna 1)
            producto.setCantidad(Integer.parseInt(modelo.getValueAt(i, 1).toString()));

            // Se consulta el producto usando el ID (columna 2)
            producto.setProducto(productosBO.consultarProductoIndividual(
                    Long.parseLong(modelo.getValueAt(i, 0).toString()))
            );

            // Aquí debería ser otra columna, por ejemplo la columna 3, si es que es la de comentarios
            producto.setComentarios(modelo.getValueAt(i, 3).toString());  // Ajuste

            // Se obtiene el precio unitario (columna 4)
            producto.setPrecioUnitario(Float.parseFloat(modelo.getValueAt(i, 4).toString()));

            // Se calcula el importe (columna 4)
            producto.setImporte(Float.parseFloat(modelo.getValueAt(i, 4).toString()));

            lista.add(producto);
        }
        return lista;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnBuscarCliente;
    private javax.swing.JButton btnBuscarProducto1;
    private javax.swing.JButton btnVolver;
    private javax.swing.JComboBox<Mesa> comboBoxMesa;
    private javax.swing.JLabel iconChefSoft;
    private javax.swing.JLabel iconComanda;
    private javax.swing.JLabel lblNombreCliente;
    private javax.swing.JLabel lblTituloComanda;
    private javax.swing.JPanel panelGeneral;
    private javax.swing.JPanel panelSuperior;
    private javax.swing.JScrollPane pnlTablaComandas;
    private javax.swing.JTable tablaComandas;
    // End of variables declaration//GEN-END:variables

    @Override
    public void productoSeleccionado(NuevoProductoDTO productoDTO) {
        Producto producto = productosBO.consultarProductoIndividual(productoDTO.getId());
        Control.getInstancia().abrirAgregarDetalleComanda(producto, this);
    }

    private void actualizarTablaConProducto(AgregarProductoComandaDTO productoComandaDTO) {

        Object[] fila = {
            productoComandaDTO.getIdProducto(),
            productoComandaDTO.getCantidad(),
            productosBO.consultarProductoIndividual(productoComandaDTO.getIdProducto()).getNombre(),
            productoComandaDTO.getComentario(),
            productoComandaDTO.getPrecioUnitario(),
            productoComandaDTO.getImporte()
        };
        modeloTabla.addRow(fila);
    }

    @Override
    public void detallesProductoComandaAceptado(AgregarProductoComandaDTO productoComandaDTO) {
        actualizarTablaConProducto(productoComandaDTO);
    }
}
